# Sources: https://gist.github.com/spicycode/1229612
# https://dev.to/krishnam/tmux-13-cool-tweaks-to-make-it-personal-and-powerful-487p

# SET the LEADER to SPACE
unbind-key C-b                   # free the original bind-key key
set-option -g prefix C-Space     # and replace with CTRL + SPACE to be more inline with VIM Leader key
bind-key C-Space send-prefix

set-option -g default-shell /usr/bin/bash

set-option -g display-time 2000            # By default, status msg disappears in the blink of an eye (750ms)
set-option -g display-panes-time 2000      # By default, pane number disappears in 1 s
set-option -g history-limit 50000          # maximum number of lines held in window history - crank it up from 2k default
set-option -g lock-after-time 3600         # lock the session after 60 mins of inactivity. Sometimes, it is good to protect your screen to make sure other's can't see enough.
# Automatically set window title
#set-option -wg automatic-rename off        # default names are too vague to see. Let me name it.
set-window-option -g automatic-rename on
set-option -g set-titles on

# Command Prompt Movements:  within the tmux command prompt and the command prompt is accessed using <P>: (in the status line)
set -g status-keys vi

# Make the x kill immediately
# unbind-key x               # unbind-key “x” from it’s current job of “ask and then close”
# bind-key x kill-pane       # rebind-key it to just “close”
# bind-key X kill-session    # key combo for killing the entire session - <prefix> + shift + x

# <Leader> | splits window vertically
# <Leader> _ splits window horizontally
bind-key | split-window -h -c "#{pane_current_path}" # let's open pane with current directory with -c option
bind-key _ split-window -v -c "#{pane_current_path}"

# No delay for escape key press
# tmux adds a short, almost imperceptible delay between the commands that can cause funny behavior when running vim inside tmux.
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf\; display "Config Reloaded !"

#******* WINDOW/PANE VIM Motions ******************#

# Pane: Vim Style Movements
bind-key -r h select-pane -L              # go left
bind-key -r j select-pane -D              # go down
bind-key -r l select-pane -R              # go right
bind-key -r k select-pane -U              # go up

# Pane: Arrow Movements
bind-key Up select-pane -U
bind-key Down select-pane -D
bind-key Left select-pane -L
bind-key Right select-pane -R

# Window: Movements
bind-key L last-window
bind-key -r C-h select-window -t :-              # cycle through the windows for quick window selection
bind-key -r C-l select-window -t :+

#******* WINDOW/PANE VIM Motions ******************#


#******* RESIZING PANES using VIM Motions ******************#

#The default key binding are Ctr+ Up/Down/Left/Right for one row movements , Alt + Up/Down/Left/Right for five row movements.
#Let's add one more to the set (Vim way)
# Vim Style
bind-key -r H resize-pane -L 2         # resize a pane two rows at a time.
bind-key -r J resize-pane -D 2
bind-key -r K resize-pane -U 2
bind-key -r L resize-pane -R 2

#******* RESIZING PANES using VIM Motions ******************#

# word separators for automatic word selection
set-window-option -g word-separators ' @"=()[]'  # default => ‘ -_@’.

#******* COPYING AND PASTING  ******************#

# To navigating through output in quick way, enable vim navigation keys
set-window-option -g mode-keys vi

# Vim Style in Copy-Mode "<prefix> ["
# Interacting with Paste Buffer
bind-key Escape copy-mode
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection            -N "start visual mode for selection"
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel  -N "yank text into the buffer"
bind-key C-b choose-buffer # view the buffer stack
unbind-key p
bind-key p paste-buffer # default "<prefix> ]"

# Alt+C: To copy from the current buffer to the sys clipboard .
bind-key M-c run "tmux save-buffer - | xclip -i -sel clipboard"

# Alt+V: To paste text from sys clipboard into current buffer
bind-key M-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\""

# Ctr+C: Make it even better -just one step to move from sys->buffer->editor vice versa
bind-key -Tcopy-mode-vi C-c send -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c" \; display-message "copied to system clipboard"

# Ctr+V: To paste text from sys clipboard into the view
bind-key C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\";tmux paste-buffer"

# To take ASCII screenshots (tmux-resurrect uses C-s for saving, here binding to Alt-s ) .
# create the dir for storing screenshots
bind-key M-s run "tmux capture-pane; tmux save-buffer ~/.mytmux/pane_screenshots/\"$(date +%FT%T)\".screenshots"

#******* COPYING AND PASTING - END ******************#

# To show available colors run: 
# for i in {0..255}; do  printf "\x1b[38;5;${i}mcolor%-5i\x1b[0m" $i ; if ! (( ($i - 3) % 6 )); then echo ; fi ; done

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"

# Pane divider
set-window-option -g pane-border-style fg=colour11,bg=colour15
set-window-option -g pane-active-border-style fg=colour100,bg=colour15

# Cool trick: Let's dim out any pane that's not active.
set-window-option -g window-style fg=black,bg=colour7
set-window-option -g window-active-style fg=black,bg=colour15   # colour15 fg- active font

# Command / Message line
set-window-option -g message-style fg=black,bold,bg=colour11


#******* STATUS BAR  ******************#
# To show available colors run: 
# for i in {0..255}; do  printf "\x1b[38;5;${i}mcolor%-5i\x1b[0m" $i ; if ! (( ($i - 3) % 6 )); then echo ; fi ; done

# THEME
set -g status-justify centre
set -g status-bg colour15
set -g status-fg white
set -g window-status-current-style bg=white,fg=black,bold
set -g status-interval 60
set -g status-left-length 30
set -g status-left '#[fg=colour22](#S) #(whoami) '
set -g status-right '#[fg=colour22] #(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'

set-window-option -g window-status-style fg=colour22,bg=colour04
set-window-option -g window-status-current-style fg=black,bold,bg=colour015
set-window-option -g window-status-last-style fg=black,bold,bg=colour015
set-window-option -g window-status-separator |

### Left Side
### Show my active session, window, pane name or id  
##set-option -g status-left-length 50   # default 10
##set-option -g status-left "[#[fg=white]S: #S, #[fg=colour11]W #I-#W, #[fg=colour3]P: #P #[fg=white]]"
### set-option -g status-left-style
##
### Right Side
##set-option -g status-right-length 50   # default 50
##set-option -g status-right "#[fg=grey,dim,bg=default] uptime: #(uptime | cut -f 4-5 -d\" \" | cut -f 1 -d\",\")"
##
### Enable Activity Alerts
##set-option -g status-interval 60           # Update the status line every 60 seconds (15 is default)
##set-window-option -g monitor-activity on   # highlights the window name in the status line

#******* STATUS BAR - END  ******************#

